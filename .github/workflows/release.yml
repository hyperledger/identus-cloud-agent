name: Release

concurrency:
  group: release

on:
  workflow_dispatch:

jobs:
  release:
    env:
      GITHUB_ACTOR: "hyperledger-bot"
      GITHUB_ACTOR_EMAIL: "hyperledger-bot@hyperledger.org"
      GITHUB_TOKEN: ${{ secrets.IDENTUS_CI }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      # New JDK version makes 'localhost' lookup on linux return ipv6.
      # Our test containers are on ipv4. We need to make 'localhost' resolve to ipv4.
      JAVA_TOOL_OPTIONS: -Djava.net.preferIPv4Stack=true
      SBT_OPTS: -Xmx2G
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.IDENTUS_CI }}
          ref: ${{ github.event.inputs.release-branch }}
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v14
        with:
          java-version: openjdk@1.17

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - uses: crazy-max/ghaction-import-gpg@v6
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.HYP_BOT_GPG_PRIVATE }}
          passphrase: ${{ secrets.HYP_BOT_GPG_PASSWORD }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_config_global: true
          git_tag_gpgsign: false

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Release
        env:
          GIT_AUTHOR_EMAIL: ${{ steps.import_gpg.outputs.email }}
          GIT_COMMITTER_EMAIL: ${{ steps.import_gpg.outputs.email }}
          GIT_AUTHOR_NAME: ${{ steps.import_gpg.outputs.name }}
          GIT_COMMITTER_NAME: ${{ steps.import_gpg.outputs.name }}
          GITHUB_TOKEN: ${{ secrets.IDENTUS_CI }}
          DOCKERHUB_ORG: ${{ vars.DOCKERHUB_ORG }}
        run: |
          npm install
          npx semantic-release

      - name: Get release version
        id: get_version
        run: echo "RELEASE_VERSION=$(cat .release-version)" >> $GITHUB_ENV

      - name: Trigger component integration
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.ATALA_GITHUB_TOKEN }}
          repository: input-output-hk/integration
          event-type: integration
          client-payload: '{"component": "cloud-agent", "version": "${{ env.RELEASE_VERSION }}"}'
