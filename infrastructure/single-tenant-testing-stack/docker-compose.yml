---
version: "3.8"

services:
  issuer-db:
    image: postgres:13
    environment:
      POSTGRES_MULTIPLE_DATABASES: "pollux,connect,agent"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - issuer_pg_data_db:/var/lib/postgresql/data
      - ./postgres/init-script.sh:/docker-entrypoint-initdb.d/init-script.sh
      - ./postgres/max_conns.sql:/docker-entrypoint-initdb.d/max_conns.sql
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "agent"]
      interval: 10s
      timeout: 5s
      retries: 5

  verifier-db:
    image: postgres:13
    environment:
      POSTGRES_MULTIPLE_DATABASES: "pollux,connect,agent"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - verifier_pg_data_db:/var/lib/postgresql/data
      - ./postgres/init-script.sh:/docker-entrypoint-initdb.d/init-script.sh
      - ./postgres/max_conns.sql:/docker-entrypoint-initdb.d/max_conns.sql
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "agent"]
      interval: 10s
      timeout: 5s
      retries: 5

  holder-db:
    image: postgres:13
    environment:
      POSTGRES_MULTIPLE_DATABASES: "pollux,connect,agent"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - holder_pg_data_db:/var/lib/postgresql/data
      - ./postgres/init-script.sh:/docker-entrypoint-initdb.d/init-script.sh
      - ./postgres/max_conns.sql:/docker-entrypoint-initdb.d/max_conns.sql
    ports:
      - 5434:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "agent"]
      interval: 10s
      timeout: 5s
      retries: 5

  node-db:
    image: postgres:13
    environment:
      POSTGRES_MULTIPLE_DATABASES: "node_db"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - node_pg_data_db:/var/lib/postgresql/data
      - ./postgres/init-script.sh:/docker-entrypoint-initdb.d/init-script.sh
      - ./postgres/max_conns.sql:/docker-entrypoint-initdb.d/max_conns.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "node_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  prism-node:
    image: ghcr.io/input-output-hk/prism-node:${PRISM_NODE_VERSION}
    environment:
      NODE_PSQL_HOST: node-db:5432
      NODE_LEDGER: in-memory
      NODE_REFRESH_AND_SUBMIT_PERIOD: 1s
      NODE_MOVE_SCHEDULED_TO_PENDING_PERIOD: 1s
      NODE_WALLET_MAX_TPS: 1000
    depends_on:
      node-db:
        condition: service_healthy

  issuer-agent:
    image: ghcr.io/hyperledgeridentus/identus-cloud-agent:${AGENT_VERSION}
    environment:
      POLLUX_DB_HOST: issuer-db
      POLLUX_DB_PORT: 5432
      POLLUX_DB_NAME: pollux
      POLLUX_DB_USER: postgres
      POLLUX_DB_PASSWORD: postgres
      CONNECT_DB_HOST: issuer-db
      CONNECT_DB_PORT: 5432
      CONNECT_DB_NAME: connect
      CONNECT_DB_USER: postgres
      CONNECT_DB_PASSWORD: postgres
      AGENT_DB_HOST: issuer-db
      AGENT_DB_PORT: 5432
      AGENT_DB_NAME: agent
      AGENT_DB_USER: postgres
      AGENT_DB_PASSWORD: postgres
      DIDCOMM_SERVICE_URL: http://host.docker.internal:${PORT}/issuer/didcomm
      PRISM_NODE_HOST: prism-node
      PRISM_NODE_PORT: 50053
      SECRET_STORAGE_BACKEND: postgres
      DEV_MODE: true
      DEFAULT_WALLET_ENABLED:
      DEFAULT_WALLET_SEED:
      # DEFAULT_WALLET_WEBHOOK_URL:
      # DEFAULT_WALLET_WEBHOOK_API_KEY:
      # DEFAULT_WALLET_AUTH_API_KEY:
      # GLOBAL_WEBHOOK_URL:
      # GLOBAL_WEBHOOK_API_KEY:
      # WEBHOOK_PARALLELISM:
      ADMIN_TOKEN:
      API_KEY_SALT:
      API_KEY_ENABLED:
      API_KEY_AUTHENTICATE_AS_DEFAULT_USER:
      API_KEY_AUTO_PROVISIONING:
      ISSUE_BG_JOB_RECORDS_LIMIT: 25
      ISSUE_BG_JOB_RECURRENCE_DELAY: 100 milliseconds
      ISSUE_BG_JOB_PROCESSING_PARALLELISM: 20
      PRESENTATION_BG_JOB_RECORDS_LIMIT: 25
      PRESENTATION_BG_JOB_RECURRENCE_DELAY: 100 milliseconds
      PRESENTATION_BG_JOB_PROCESSING_PARALLELISM: 20
      CONNECT_BG_JOB_RECORDS_LIMIT: 25
      CONNECT_BG_JOB_RECURRENCE_DELAY: 100 milliseconds
      CONNECT_BG_JOB_PROCESSING_PARALLELISM: 20
    depends_on:
      issuer-db:
        condition: service_healthy
      prism-node:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://issuer-agent:8085/_system/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      [
        -Dcom.sun.management.jmxremote,
        -Dcom.sun.management.jmxremote.port=9095,
        -Dcom.sun.management.jmxremote.rmi.port=9095,
        -Dcom.sun.management.jmxremote.ssl=false,
        -Dcom.sun.management.jmxremote.local.only=true,
        -Dcom.sun.management.jmxremote.authenticate=false,
        -Djava.rmi.server.hostname=127.0.0.1,
      ]
    ports:
      - 9095:9095

  verifier-agent:
    image: ghcr.io/hyperledgeridentus/identus-cloud-agent:${AGENT_VERSION}
    environment:
      POLLUX_DB_HOST: verifier-db
      POLLUX_DB_PORT: 5432
      POLLUX_DB_NAME: pollux
      POLLUX_DB_USER: postgres
      POLLUX_DB_PASSWORD: postgres
      CONNECT_DB_HOST: verifier-db
      CONNECT_DB_PORT: 5432
      CONNECT_DB_NAME: connect
      CONNECT_DB_USER: postgres
      CONNECT_DB_PASSWORD: postgres
      AGENT_DB_HOST: verifier-db
      AGENT_DB_PORT: 5432
      AGENT_DB_NAME: agent
      AGENT_DB_USER: postgres
      AGENT_DB_PASSWORD: postgres
      DIDCOMM_SERVICE_URL: http://host.docker.internal:${PORT}/verifier/didcomm
      PRISM_NODE_HOST: prism-node
      PRISM_NODE_PORT: 50053
      SECRET_STORAGE_BACKEND: postgres
      DEV_MODE: true
      DEFAULT_WALLET_ENABLED:
      DEFAULT_WALLET_SEED:
      # DEFAULT_WALLET_WEBHOOK_URL:
      # DEFAULT_WALLET_WEBHOOK_API_KEY:
      # DEFAULT_WALLET_AUTH_API_KEY:
      # GLOBAL_WEBHOOK_URL:
      # GLOBAL_WEBHOOK_API_KEY:
      # WEBHOOK_PARALLELISM:
      ADMIN_TOKEN:
      API_KEY_SALT:
      API_KEY_ENABLED:
      API_KEY_AUTHENTICATE_AS_DEFAULT_USER:
      API_KEY_AUTO_PROVISIONING:
      ISSUE_BG_JOB_RECORDS_LIMIT: 25
      ISSUE_BG_JOB_RECURRENCE_DELAY: 100 milliseconds
      ISSUE_BG_JOB_PROCESSING_PARALLELISM: 20
      PRESENTATION_BG_JOB_RECORDS_LIMIT: 25
      PRESENTATION_BG_JOB_RECURRENCE_DELAY: 100 milliseconds
      PRESENTATION_BG_JOB_PROCESSING_PARALLELISM: 20
      CONNECT_BG_JOB_RECORDS_LIMIT: 25
      CONNECT_BG_JOB_RECURRENCE_DELAY: 100 milliseconds
      CONNECT_BG_JOB_PROCESSING_PARALLELISM: 20
    depends_on:
      verifier-db:
        condition: service_healthy
      prism-node:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://verifier-agent:8085/_system/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    extra_hosts:
      - "host.docker.internal:host-gateway"

  issuer-agent-postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    ports:
      - "9995:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@holder-db:5432/postgres?sslmode=disable

  holder-agent-postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    ports:
      - "9996:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@issuer-db:5432/postgres?sslmode=disable

  holder-agent:
    image: ghcr.io/hyperledgeridentus/identus-cloud-agent:${AGENT_VERSION}
    environment:
      POLLUX_DB_HOST: holder-db
      POLLUX_DB_PORT: 5432
      POLLUX_DB_NAME: pollux
      POLLUX_DB_USER: postgres
      POLLUX_DB_PASSWORD: postgres
      CONNECT_DB_HOST: holder-db
      CONNECT_DB_PORT: 5432
      CONNECT_DB_NAME: connect
      CONNECT_DB_USER: postgres
      CONNECT_DB_PASSWORD: postgres
      AGENT_DB_HOST: holder-db
      AGENT_DB_PORT: 5432
      AGENT_DB_NAME: agent
      AGENT_DB_USER: postgres
      AGENT_DB_PASSWORD: postgres
      DIDCOMM_SERVICE_URL: http://host.docker.internal:${PORT}/holder/didcomm
      PRISM_NODE_HOST: prism-node
      PRISM_NODE_PORT: 50053
      SECRET_STORAGE_BACKEND: postgres
      DEV_MODE: true
      DEFAULT_WALLET_ENABLED:
      DEFAULT_WALLET_SEED:
      # DEFAULT_WALLET_WEBHOOK_URL:
      # DEFAULT_WALLET_WEBHOOK_API_KEY:
      # DEFAULT_WALLET_AUTH_API_KEY:
      # GLOBAL_WEBHOOK_URL:
      # GLOBAL_WEBHOOK_API_KEY:
      # WEBHOOK_PARALLELISM:
      ISSUE_BG_JOB_RECORDS_LIMIT: 25
      ISSUE_BG_JOB_RECURRENCE_DELAY: 100 milliseconds
      ISSUE_BG_JOB_PROCESSING_PARALLELISM: 20
      PRESENTATION_BG_JOB_RECORDS_LIMIT: 25
      PRESENTATION_BG_JOB_RECURRENCE_DELAY: 100 milliseconds
      PRESENTATION_BG_JOB_PROCESSING_PARALLELISM: 20
      CONNECT_BG_JOB_RECORDS_LIMIT: 25
      CONNECT_BG_JOB_RECURRENCE_DELAY: 100 milliseconds
      CONNECT_BG_JOB_PROCESSING_PARALLELISM: 20
      ADMIN_TOKEN:
      API_KEY_SALT:
      API_KEY_ENABLED:
      API_KEY_AUTHENTICATE_AS_DEFAULT_USER:
      API_KEY_AUTO_PROVISIONING:
    depends_on:
      holder-db:
        condition: service_healthy
      prism-node:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://holder-agent:8085/_system/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      [
        -Dcom.sun.management.jmxremote,
        -Dcom.sun.management.jmxremote.port=9096,
        -Dcom.sun.management.jmxremote.rmi.port=9096,
        -Dcom.sun.management.jmxremote.ssl=false,
        -Dcom.sun.management.jmxremote.local.only=true,
        -Dcom.sun.management.jmxremote.authenticate=false,
        -Djava.rmi.server.hostname=127.0.0.1,
      ]
    ports:
      - 9096:9096

  apisix:
    image: apache/apisix:2.15.0-alpine
    volumes:
      - ./apisix/conf/apisix.yaml:/usr/local/apisix/conf/apisix.yaml:ro
      - ./apisix/conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    ports:
      - "${PORT}:9080/tcp"
    depends_on:
      - issuer-agent
      - verifier-agent
      - holder-agent

volumes:
  issuer_pg_data_db:
  verifier_pg_data_db:
  holder_pg_data_db:
  node_pg_data_db:
  pgadmin:
